sudo: required

language: generic

#services:
#  - docker

#git:
#  depth: 5
#  quiet: true
#  submodules: true

env:
  global:
    - APP_NAME=travistest
    - DOCKER_HUB_NAME=${DOCKER_USERNAME}/${APP_NAME}
    - IMAGE_NAME=${DOCKER_HUB_NAME}:${TRAVIS_BRANCH}
    - IMAGE_NAME_TEST=${IMAGE_NAME}-test
    - REGEX_PUSH_BRANCH='development|staging|production'
#  - SECRET_VAR1=SECRET1
#  matrix:
#  - SECRET_VAR2=SECRET2
#
#stages:
#  - build
#  - test
#  - name: deploy
#    if: branch != development

jobs:
  include:
    - stage: build
      script:
        - echo ">>> BUILDING STARTED <<<<"
        - docker pull ${IMAGE_NAME} || true
        - docker images
        - docker build -t ${IMAGE_NAME_TEST} .
        - docker images
        - if [[ ${TRAVIS_BRANCH} =~ ${REGEX_PUSH_BRANCH} ]]; then
            echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin;
            docker push ${IMAGE_NAME_TEST};
          fi
        - echo ">>> BUILDING FINISHED <<<<"
    - stage: Deploys
      script:
        - echo ">>> Deploy 2 Dockerhub ${TRAVIS_BRANCH} <<<<"
        - docker images
        - if [[ ${TRAVIS_BRANCH} =~ ${REGEX_PUSH_BRANCH} ]]; then
            docker pull ${IMAGE_NAME} || true;
            docker images;
            docker build -t ${IMAGE_NAME} . ;
            echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin;
            docker push ${IMAGE_NAME};
          fi


# para criar um release no github conforme a tag criada no Commit
#    - stage: GitHub Release
#      script: skip
#      deploy:
#        provider: releases
#        api_key: "$GITHUB_OAUTH_TOKEN"
#        skip_cleanup: true
#        on:
#          tags: true

#deploy:
#  on:
#    branch: release
#    condition: $MY_ENV = super_awesome
# ou
#    all_branches: true
#    repo: travis-ci/dpl

#deploy:
#  overwrite: true
#  file: "FILE TO UPLOAD"

#deploy:
#  provider: script
#  script: deploy.sh
#  on:
#    all_branches: true
#    condition: $TRAVIS_BRANCH =~ ^staging|production$


#deploy:
#  # deploy develop to the staging environment
#  - provider: script
#    script: bash scripts/deploy.sh staging $TRAVIS_TAG
#    on:
#      branch: develop
#  # deploy master to production
#  - provider: script
#    script: bash scripts/deploy.sh production $TRAVIS_TAG
#    on:
#      branch: master


#apt addons:
#before_install:
#install:
#before_script:
#script:
#before_cache:
#after_success:
#after_failure:
#before_deploy:
#deploy:
#after_deploy:
#after_script:


######dockerhub

#before_install:
#  - docker build -t cinhtau/elasticsearch .
#script:
#  - docker images cinhtau/elasticsearch
#after_success:
#  - if [ "$TRAVIS_BRANCH" == "master" ]; then
#    docker login -e="$DOCKER_EMAIL" -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
#    docker push cinhtau/elasticsearch;
#    fi